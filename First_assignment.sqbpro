<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/mehme/Desktop/ITF-11/SQL/Databases/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3862"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainalbums"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="First Assignment">-- Questions:
-- 1. Write a query that displays InvoiceId, CustomerId and total dollar amount for each invoice,
--sorted first by CustomerId (in ascending order), and then by total dollar amount in descending order).
SELECT InvoiceId,CustomerId,total
FROM invoices
ORDER BY CustomerId ASC,CustomerId,total DESC;

-- 2. Write a query that displays InvoiceId, CustomerId and total dollar amount for each invoice, 
-- but this time sorted first by total dollar amount (in descending order), and then by CustomerId
-- (in ascending order).
SELECT InvoiceId,CustomerId,total 
FROM invoices 
ORDER BY total DESC,CustomerId ASC;
-- 3. Compare the results of these two queries above. How are the results different when you switch 
-- the column you sort on first? (Explain it in your own words.)
-- -- The output table changed completely when we switched the column. It always sorts based on the 
-- first written column. Then if theare are similar values in that column it sorts 
-- them again based on the second written sort column.
-- 4. Write a query to pull the first 10 rows and all columns from the invoices table that have a 
-- dollar amount of total greater than or equal to 10.
SELECT * 
FROM invoices 
WHERE total &gt;= 10 
LIMIT 10;
-- 5. Write a query to pull the first 5 rows and all columns from the invoices table that have a 
-- dollar amount of total less than 10.
SELECT * 
FROM invoices 
WHERE total &lt; 10 
LIMIT 5;
-- 6. Find all track names that start with 'B' and end with 's'.
SELECT Name
FROM tracks 
WHERE Name LIKE &quot;B%s&quot;;
-- 7. Use the invoices table to find all information regarding invoices whose billing address
--  is USA or Germany or Norway or Canada and invoice date is at any point in 2010, sorted from newest
--  to oldest.
</sql><current_tab id="0"/></tab_sql></sqlb_project>
